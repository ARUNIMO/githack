/// <reference types="react" />
export declare type FontSize = 'smaller' | 'small' | 'regular' | 'large' | 'larger' | 'largest' | 'extra-large';
export declare type FontWeight = 'thin' | 'extralight' | 'light' | 'regular' | 'medium' | 'semibold' | 'bold' | 'extrabold' | 'black';
export declare type Font = 'primary' | 'secondary';
export declare type FontSizeUpgrade = 12 | 14 | 16 | 17 | 18 | 20 | 24 | 30 | 36 | 48 | 60 | 72;
export interface FontStyleProps {
    font?: Font;
    color?: Color;
    size?: FontSize;
    weight?: FontWeight;
}
export interface FontStylePropsUpgrade {
    font?: Font;
    size?: FontSizeUpgrade;
    weight?: FontWeight;
    letterSpacing?: React.CSSProperties['letterSpacing'];
    color?: Color;
}
/**
 * Contains an array containing string values representing colors in the
 * theme.color file. In the theme file, each color is represented by an object
 * containing variations such as light, regular, etc. of that color like so:
 *
 * theme.color
 *    |...
 *    |colorName n
 *        |...
 *        |variation n
 *        |...
 *    |...
 *
 * This constant contains all the varaints for static type checking with TypeScript
 * colors: [..., *colorName-[*variation], ...]
 * string[] - an array of defined colors
 */
export declare const Colors: readonly ["grey-0", "grey-1", "grey-2", "grey-3", "grey-4", "grey-5", "grey-6", "grey-7", "grey-7.5", "grey-8", "blue-0", "blue-1", "blue-2", "blue-3", "blue-4", "blue-4.5", "blue-5", "blue-6", "blue-7", "blue-8", "yellow-0", "yellow-1", "yellow-2", "yellow-3", "yellow-4", "yellow-5", "yellow-6", "yellow-7", "yellow-8", "teal-0", "teal-1", "teal-2", "teal-3", "teal-4", "teal-5", "teal-6", "teal-7", "teal-8", "red-0", "red-1", "red-2", "red-3", "red-4", "red-5", "red-6", "red-7", "red-8", "white-0", "black-0", "gold-0"];
export declare type Color = typeof Colors[number];
export declare type Elevation = 0 | 1 | 2 | 3 | 4 | 5 | 'blue-1' | 'blue-2' | 'blue-3' | 'blue-4' | 'blue-5';
