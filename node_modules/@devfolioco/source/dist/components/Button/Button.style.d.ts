import { HTMLAttributes } from 'react';
import { IconProps } from '@components/Icon';
import { ButtonProps } from '@components/Button';
interface StyledButtonProps {
    /** Specifies the height of the button */
    height?: string;
    /** Allow the button to take the size of its parent container */
    stretch?: boolean;
    /** Controls the look of the element */
    appearance: 'primary' | 'secondary' | 'tertiary' | 'twitter' | 'danger' | 'link';
    /** Indicates if the button triggered action is in progress */
    $loading?: boolean;
    /** The size of the button */
    size: 'small' | 'medium' | 'large';
}
export declare const Button: import("styled-components").StyledComponent<"button", any, StyledButtonProps & HTMLAttributes<HTMLButtonElement>, never>;
interface StyledIconProps extends IconProps {
    iconPosition: ButtonProps['iconPosition'];
}
export declare const ButtonIcon: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<IconProps & HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>, any, StyledIconProps, never>;
export declare const LoaderIcon: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<IconProps & HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>, any, {}, never>;
export {};
