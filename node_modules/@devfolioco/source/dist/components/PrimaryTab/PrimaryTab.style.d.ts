/// <reference types="react" />
interface ContainerProps {
    compact?: boolean;
    absolute?: boolean;
}
export declare const Container: import("styled-components").StyledComponent<"div", any, ContainerProps, never>;
interface DivisionsContainerProps {
    show?: boolean;
}
export declare const DivisionsContainer: import("styled-components").StyledComponent<"div", any, DivisionsContainerProps, never>;
interface SlidingBackgroundProps {
    transition: boolean;
    height: number;
    width: number;
    left: number;
    top: number;
}
export declare const SlidingBackground: import("styled-components").StyledComponent<"div", any, SlidingBackgroundProps, never>;
interface ItemsContainerProps {
    show?: boolean;
    collapsed?: boolean;
    compact?: boolean;
    divider?: boolean;
}
export declare const ItemsContainer: import("styled-components").StyledComponent<"div", any, ItemsContainerProps, never>;
interface ItemProps {
    compact?: boolean;
    active?: boolean;
}
export declare const Item: import("styled-components").StyledComponent<"button", any, ItemProps, never>;
export declare const Label: import("styled-components").StyledComponent<"span", any, {}, never>;
interface CollapseToggleContainerProps {
    show?: boolean;
}
export declare const CollapseToggleContainer: import("styled-components").StyledComponent<"div", any, CollapseToggleContainerProps, never>;
interface CollapseToggleProps {
    collapsed?: boolean;
}
export declare const CollapseToggle: import("styled-components").StyledComponent<"button", any, CollapseToggleProps, never>;
interface StyledIconProps {
    collapsed?: boolean;
}
export declare const StyledIcon: import("styled-components").StyledComponent<import("react").ForwardRefExoticComponent<import("../Icon").IconProps & import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>, any, StyledIconProps, never>;
export {};
